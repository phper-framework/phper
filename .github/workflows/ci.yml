# Copyright (c) 2022 PHPER Framework Team
# PHPER is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan
# PSL v2. You may obtain a copy of Mulan PSL v2 at:
#          http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY
# KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
# NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.

name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ "**" ]

env:
  RUST_LOG: debug
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "1"
  RUSTFLAGS: "-D warnings"
  LLVM_CONFIG_PATH: llvm-config-10

jobs:
  ci:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install libclang
        run: sudo apt-get install -y llvm-10-dev libclang-10-dev

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: php-config

      - name: Setup php-fpm
        run: |
          sudo apt-get install -y php${{ matrix.php-version }}-fpm
          sudo rm -f /usr/sbin/php-fpm
          sudo ln -s /usr/sbin/php-fpm${{ matrix.php-version }} /usr/sbin/php-fpm

      - name: PHP version
        run: |
          php-config || true
          /usr/sbin/php-fpm --version

      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: build
          args: --release

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: clippy
          args: --release

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: test
          args: --release -- --nocapture

      - name: Cargo doc
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: "-D warnings --cfg docsrs"
        with:
          toolchain: nightly
          command: doc
          args: --workspace --no-deps --all-features

  # Test every features for single crate.
  check:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - "7.4"
        features:
          - ""
          - "--all-features"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install libclang
        run: sudo apt-get install -y llvm-10-dev libclang-10-dev

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: php-config

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cargo check phper-sys
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper-sys/Cargo.toml ${{ matrix.features }}

      - name: Cargo check phper-build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper-build/Cargo.toml ${{ matrix.features }}

      - name: Cargo check phper-macros
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper-macros/Cargo.toml ${{ matrix.features }}

      - name: Cargo check phper-alloc
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper-alloc/Cargo.toml ${{ matrix.features }}

      - name: Cargo check phper-test
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper-test/Cargo.toml ${{ matrix.features }}

      - name: Cargo check phper
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path phper/Cargo.toml ${{ matrix.features }}
